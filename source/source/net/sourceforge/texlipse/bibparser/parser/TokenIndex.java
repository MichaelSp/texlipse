/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sourceforge.texlipse.bibparser.parser;

import net.sourceforge.texlipse.bibparser.analysis.AnalysisAdapter;
import net.sourceforge.texlipse.bibparser.node.EOF;
import net.sourceforge.texlipse.bibparser.node.TBString;
import net.sourceforge.texlipse.bibparser.node.TComma;
import net.sourceforge.texlipse.bibparser.node.TEntryName;
import net.sourceforge.texlipse.bibparser.node.TEquals;
import net.sourceforge.texlipse.bibparser.node.TEstring;
import net.sourceforge.texlipse.bibparser.node.TIdentifier;
import net.sourceforge.texlipse.bibparser.node.TLBrace;
import net.sourceforge.texlipse.bibparser.node.TLParen;
import net.sourceforge.texlipse.bibparser.node.TNumber;
import net.sourceforge.texlipse.bibparser.node.TPreamble;
import net.sourceforge.texlipse.bibparser.node.TQuotec;
import net.sourceforge.texlipse.bibparser.node.TRBrace;
import net.sourceforge.texlipse.bibparser.node.TRParen;
import net.sourceforge.texlipse.bibparser.node.TScribeComment;
import net.sourceforge.texlipse.bibparser.node.TSharp;
import net.sourceforge.texlipse.bibparser.node.TStringLiteral;
import net.sourceforge.texlipse.bibparser.node.TTaskcomment;

class TokenIndex extends AnalysisAdapter {
	int index;

	@Override
	public void caseTTaskcomment(TTaskcomment node) {
		this.index = 0;
	}

	@Override
	public void caseTEstring(TEstring node) {
		this.index = 1;
	}

	@Override
	public void caseTScribeComment(TScribeComment node) {
		this.index = 2;
	}

	@Override
	public void caseTPreamble(TPreamble node) {
		this.index = 3;
	}

	@Override
	public void caseTEntryName(TEntryName node) {
		this.index = 4;
	}

	@Override
	public void caseTLBrace(TLBrace node) {
		this.index = 5;
	}

	@Override
	public void caseTRBrace(TRBrace node) {
		this.index = 6;
	}

	@Override
	public void caseTBString(TBString node) {
		this.index = 7;
	}

	@Override
	public void caseTLParen(TLParen node) {
		this.index = 8;
	}

	@Override
	public void caseTRParen(TRParen node) {
		this.index = 9;
	}

	@Override
	public void caseTComma(TComma node) {
		this.index = 10;
	}

	@Override
	public void caseTEquals(TEquals node) {
		this.index = 11;
	}

	@Override
	public void caseTSharp(TSharp node) {
		this.index = 12;
	}

	@Override
	public void caseTNumber(TNumber node) {
		this.index = 13;
	}

	@Override
	public void caseTIdentifier(TIdentifier node) {
		this.index = 14;
	}

	@Override
	public void caseTQuotec(TQuotec node) {
		this.index = 15;
	}

	@Override
	public void caseTStringLiteral(TStringLiteral node) {
		this.index = 16;
	}

	@Override
	public void caseEOF(EOF node) {
		this.index = 17;
	}
}
